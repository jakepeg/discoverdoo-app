{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/Dev/discoverdoo-app/components/favourites.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport auth0 from '../services/auth0';\nimport { updateFavourites } from '../actions';\nimport Heart from './heart';\n\nconst Favourites = props => {\n  const {\n    0: isClick,\n    1: setClick\n  } = useState();\n  const activityId = props.activityId;\n  let user = {\n    favourites: {},\n    user: \"\"\n  }; // let favourites = {}\n\n  const setUser = () => {\n    user = {\n      user: Cookies.get('sub'),\n      favourites: JSON.parse(Cookies.get('favourites').substring(1, Cookies.get('favourites').length - 1))\n    }; // favourites = user.favourites\n  };\n\n  if (auth0.isAuthenticated()) {\n    // do I need to refresh this to reflect the cookie after any upadates? shouldn't user use useState?\n    setUser();\n  }\n\n  const clickHeart = () => {\n    // if the user is logged in then allow them to add / remove favourites\n    if (auth0.isAuthenticated()) {\n      // update isClick state to what it wasn't before\n      setClick(!isClick); // \n\n      user.favourites[activityId] = !isClick;\n      console.log(user.favourites[activityId]); // update favourites in mongoDB\n\n      updateFavourites(user); // auth0.setFavesCookie()\n\n      Cookies.set('favourites', user.favourites); // make sure what \n\n      setUser();\n    } // if the user is not logged in the show login popup\n    else {\n        auth0.login();\n      }\n  };\n\n  useEffect(() => {\n    if (auth0.isAuthenticated()) {\n      if (user.favourites[activityId] === true) {\n        setClick(true);\n      }\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-3566507812\" + \" \" + \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, auth0.isAuthenticated() && __jsx(Heart, {\n    isClick: isClick,\n    onClick: () => clickHeart(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), auth0.isAuthenticated() === false && __jsx(\"img\", {\n    src: \"https://res.cloudinary.com/jakepeg/image/upload/v1606743872/heart_ozpqja.png\",\n    onClick: () => clickHeart(),\n    alt: \"heart icon\",\n    className: \"jsx-3566507812\" + \" \" + \"heart-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"3566507812\",\n    __self: this\n  }, \".heart.jsx-3566507812{position:absolute;z-index:10;margin-left:-25px;margin-top:-25px;}.heart-img.jsx-3566507812{cursor:pointer;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9EZXYvRGV2L2Rpc2NvdmVyZG9vLWFwcC9jb21wb25lbnRzL2Zhdm91cml0ZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0VrQixBQUc2QixBQU9ILGVBQ2pCLEdBUGEsV0FDTyxrQkFDRCxpQkFDbkIiLCJmaWxlIjoiL1VzZXJzL0Rldi9EZXYvZGlzY292ZXJkb28tYXBwL2NvbXBvbmVudHMvZmF2b3VyaXRlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgQ29va2llcyBmcm9tICdqcy1jb29raWUnXG5pbXBvcnQgYXV0aDAgZnJvbSAnLi4vc2VydmljZXMvYXV0aDAnXG5pbXBvcnQgeyB1cGRhdGVGYXZvdXJpdGVzIH0gZnJvbSAnLi4vYWN0aW9ucydcbmltcG9ydCBIZWFydCBmcm9tICcuL2hlYXJ0J1xuIFxuY29uc3QgRmF2b3VyaXRlcyA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbaXNDbGljaywgc2V0Q2xpY2tdID0gdXNlU3RhdGUoKTtcbiAgY29uc3QgYWN0aXZpdHlJZCA9IHByb3BzLmFjdGl2aXR5SWRcbiAgbGV0IHVzZXIgPSB7ZmF2b3VyaXRlczoge30sIHVzZXI6IFwiXCJ9XG4gIC8vIGxldCBmYXZvdXJpdGVzID0ge31cblxuICBjb25zdCBzZXRVc2VyID0gKCkgPT4ge1xuICAgIHVzZXIgPSBcbiAgICB7XG4gICAgICB1c2VyOiBDb29raWVzLmdldCgnc3ViJyksIFxuICAgICAgZmF2b3VyaXRlczogSlNPTi5wYXJzZShDb29raWVzLmdldCgnZmF2b3VyaXRlcycpLnN1YnN0cmluZygxLCBDb29raWVzLmdldCgnZmF2b3VyaXRlcycpLmxlbmd0aC0xKSlcbiAgICB9XG4gICAgLy8gZmF2b3VyaXRlcyA9IHVzZXIuZmF2b3VyaXRlc1xuICB9XG5cbiAgaWYgKGF1dGgwLmlzQXV0aGVudGljYXRlZCgpKSB7XG4gICAgLy8gZG8gSSBuZWVkIHRvIHJlZnJlc2ggdGhpcyB0byByZWZsZWN0IHRoZSBjb29raWUgYWZ0ZXIgYW55IHVwYWRhdGVzPyBzaG91bGRuJ3QgdXNlciB1c2UgdXNlU3RhdGU/XG4gICAgc2V0VXNlcigpXG4gIH1cblxuICBjb25zdCBjbGlja0hlYXJ0ID0gKCkgPT4ge1xuICAgIC8vIGlmIHRoZSB1c2VyIGlzIGxvZ2dlZCBpbiB0aGVuIGFsbG93IHRoZW0gdG8gYWRkIC8gcmVtb3ZlIGZhdm91cml0ZXNcbiAgICBpZiAoYXV0aDAuaXNBdXRoZW50aWNhdGVkKCkpIHtcbiAgICAgIC8vIHVwZGF0ZSBpc0NsaWNrIHN0YXRlIHRvIHdoYXQgaXQgd2Fzbid0IGJlZm9yZVxuICAgICAgc2V0Q2xpY2soIWlzQ2xpY2spXG4gICAgICAvLyBcbiAgICAgIHVzZXIuZmF2b3VyaXRlc1thY3Rpdml0eUlkXSA9ICFpc0NsaWNrXG4gICAgICBjb25zb2xlLmxvZyh1c2VyLmZhdm91cml0ZXNbYWN0aXZpdHlJZF0pXG4gICAgICAvLyB1cGRhdGUgZmF2b3VyaXRlcyBpbiBtb25nb0RCXG4gICAgICB1cGRhdGVGYXZvdXJpdGVzKHVzZXIpXG5cbiAgICAgIC8vIGF1dGgwLnNldEZhdmVzQ29va2llKClcbiAgICAgIENvb2tpZXMuc2V0KCdmYXZvdXJpdGVzJywgdXNlci5mYXZvdXJpdGVzKVxuICAgICAgLy8gbWFrZSBzdXJlIHdoYXQgXG4gICAgICBzZXRVc2VyKClcbiAgICB9IFxuICAgIC8vIGlmIHRoZSB1c2VyIGlzIG5vdCBsb2dnZWQgaW4gdGhlIHNob3cgbG9naW4gcG9wdXBcbiAgICBlbHNlIFxuICAgIHtcbiAgICAgIGF1dGgwLmxvZ2luKClcbiAgICB9XG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChhdXRoMC5pc0F1dGhlbnRpY2F0ZWQoKSkge1xuICAgICAgaWYgKHVzZXIuZmF2b3VyaXRlc1thY3Rpdml0eUlkXSA9PT0gdHJ1ZSkge1xuICAgICAgICBzZXRDbGljayh0cnVlKVxuICAgICAgfVxuICAgIH1cbiAgfSwgW10pXG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWFydFwiPlxuICAgICAgICB7IGF1dGgwLmlzQXV0aGVudGljYXRlZCgpICYmXG4gICAgICAgICAgPEhlYXJ0IGlzQ2xpY2s9e2lzQ2xpY2t9IG9uQ2xpY2s9eygpID0+IGNsaWNrSGVhcnQoKX0gLz5cbiAgICAgICAgfVxuICAgICAgICB7IGF1dGgwLmlzQXV0aGVudGljYXRlZCgpID09PSBmYWxzZSAmJlxuICAgICAgICAgIDxpbWcgc3JjPVwiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vamFrZXBlZy9pbWFnZS91cGxvYWQvdjE2MDY3NDM4NzIvaGVhcnRfb3pwcWphLnBuZ1wiIGNsYXNzTmFtZT1cImhlYXJ0LWltZ1wiIG9uQ2xpY2s9eygpID0+IGNsaWNrSGVhcnQoKX0gYWx0PVwiaGVhcnQgaWNvblwiIC8+XG4gICAgICAgIH1cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5oZWFydCB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHotaW5kZXg6IDEwO1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMjVweDtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAtMjVweDtcbiAgICAgICAgfSBcblxuICAgICAgICAuaGVhcnQtaW1nIHtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8Lz5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgRmF2b3VyaXRlcyJdfQ== */\\n/*@ sourceURL=/Users/Dev/Dev/discoverdoo-app/components/favourites.js */\"));\n};\n\nexport default Favourites;","map":{"version":3,"sources":["/Users/Dev/Dev/discoverdoo-app/components/favourites.js"],"names":["React","useState","useEffect","Cookies","auth0","updateFavourites","Heart","Favourites","props","isClick","setClick","activityId","user","favourites","setUser","get","JSON","parse","substring","length","isAuthenticated","clickHeart","console","log","set","login"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAsBT,QAAQ,EAApC;AACA,QAAMU,UAAU,GAAGH,KAAK,CAACG,UAAzB;AACA,MAAIC,IAAI,GAAG;AAACC,IAAAA,UAAU,EAAE,EAAb;AAAiBD,IAAAA,IAAI,EAAE;AAAvB,GAAX,CAH4B,CAI5B;;AAEA,QAAME,OAAO,GAAG,MAAM;AACpBF,IAAAA,IAAI,GACJ;AACEA,MAAAA,IAAI,EAAET,OAAO,CAACY,GAAR,CAAY,KAAZ,CADR;AAEEF,MAAAA,UAAU,EAAEG,IAAI,CAACC,KAAL,CAAWd,OAAO,CAACY,GAAR,CAAY,YAAZ,EAA0BG,SAA1B,CAAoC,CAApC,EAAuCf,OAAO,CAACY,GAAR,CAAY,YAAZ,EAA0BI,MAA1B,GAAiC,CAAxE,CAAX;AAFd,KADA,CADoB,CAMpB;AACD,GAPD;;AASA,MAAIf,KAAK,CAACgB,eAAN,EAAJ,EAA6B;AAC3B;AACAN,IAAAA,OAAO;AACR;;AAED,QAAMO,UAAU,GAAG,MAAM;AACvB;AACA,QAAIjB,KAAK,CAACgB,eAAN,EAAJ,EAA6B;AAC3B;AACAV,MAAAA,QAAQ,CAAC,CAACD,OAAF,CAAR,CAF2B,CAG3B;;AACAG,MAAAA,IAAI,CAACC,UAAL,CAAgBF,UAAhB,IAA8B,CAACF,OAA/B;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACC,UAAL,CAAgBF,UAAhB,CAAZ,EAL2B,CAM3B;;AACAN,MAAAA,gBAAgB,CAACO,IAAD,CAAhB,CAP2B,CAS3B;;AACAT,MAAAA,OAAO,CAACqB,GAAR,CAAY,YAAZ,EAA0BZ,IAAI,CAACC,UAA/B,EAV2B,CAW3B;;AACAC,MAAAA,OAAO;AACR,KAbD,CAcA;AAdA,SAgBA;AACEV,QAAAA,KAAK,CAACqB,KAAN;AACD;AACF,GArBD;;AAuBAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,KAAK,CAACgB,eAAN,EAAJ,EAA6B;AAC3B,UAAIR,IAAI,CAACC,UAAL,CAAgBF,UAAhB,MAAgC,IAApC,EAA0C;AACxCD,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF;AACF,GANQ,EAMN,EANM,CAAT;AAQA,SACE,4BACE;AAAA,wCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIN,KAAK,CAACgB,eAAN,MACA,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEX,OAAhB;AAAyB,IAAA,OAAO,EAAE,MAAMY,UAAU,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAIIjB,KAAK,CAACgB,eAAN,OAA4B,KAA5B,IACA;AAAK,IAAA,GAAG,EAAC,8EAAT;AAA8G,IAAA,OAAO,EAAE,MAAMC,UAAU,EAAvI;AAA2I,IAAA,GAAG,EAAC,YAA/I;AAAA,wCAAkG,WAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF;AAAA;AAAA;AAAA,imHADF;AAyBD,CA5ED;;AA8EA,eAAed,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Cookies from 'js-cookie'\nimport auth0 from '../services/auth0'\nimport { updateFavourites } from '../actions'\nimport Heart from './heart'\n \nconst Favourites = (props) => {\n  const [isClick, setClick] = useState();\n  const activityId = props.activityId\n  let user = {favourites: {}, user: \"\"}\n  // let favourites = {}\n\n  const setUser = () => {\n    user = \n    {\n      user: Cookies.get('sub'), \n      favourites: JSON.parse(Cookies.get('favourites').substring(1, Cookies.get('favourites').length-1))\n    }\n    // favourites = user.favourites\n  }\n\n  if (auth0.isAuthenticated()) {\n    // do I need to refresh this to reflect the cookie after any upadates? shouldn't user use useState?\n    setUser()\n  }\n\n  const clickHeart = () => {\n    // if the user is logged in then allow them to add / remove favourites\n    if (auth0.isAuthenticated()) {\n      // update isClick state to what it wasn't before\n      setClick(!isClick)\n      // \n      user.favourites[activityId] = !isClick\n      console.log(user.favourites[activityId])\n      // update favourites in mongoDB\n      updateFavourites(user)\n\n      // auth0.setFavesCookie()\n      Cookies.set('favourites', user.favourites)\n      // make sure what \n      setUser()\n    } \n    // if the user is not logged in the show login popup\n    else \n    {\n      auth0.login()\n    }\n  }\n\n  useEffect(() => {\n    if (auth0.isAuthenticated()) {\n      if (user.favourites[activityId] === true) {\n        setClick(true)\n      }\n    }\n  }, [])\n\n  return (\n    <>\n      <div className=\"heart\">\n        { auth0.isAuthenticated() &&\n          <Heart isClick={isClick} onClick={() => clickHeart()} />\n        }\n        { auth0.isAuthenticated() === false &&\n          <img src=\"https://res.cloudinary.com/jakepeg/image/upload/v1606743872/heart_ozpqja.png\" className=\"heart-img\" onClick={() => clickHeart()} alt=\"heart icon\" />\n        }\n      </div>\n\n      <style jsx>{`\n        .heart {\n          position: absolute;\n          z-index: 10;\n          margin-left: -25px;\n          margin-top: -25px;\n        } \n\n        .heart-img {\n          cursor: pointer;\n        }\n      `}</style>\n    </>\n  );\n}\n\nexport default Favourites"]},"metadata":{},"sourceType":"module"}