{"ast":null,"code":"import auth0 from 'auth0-js';\nimport Cookies from 'js-cookie';\nimport { getUserFavourites } from '../actions';\nconst CLIENT_URL = process.env.CLIENT_URL;\n\nclass Auth0 {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: 'jakepeg.eu.auth0.com',\n      clientID: '6w0luoKEKUH4QLOImluA81kNf3jLmWbr',\n      redirectUri: `${CLIENT_URL}/callback`,\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n    this.login = this.login.bind(this);\n    this.loginAddActivity = this.loginAddActivity.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  handleAuthentication() {\n    return new Promise((resolve, reject) => {\n      this.auth0.parseHash((err, authResult) => {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          this.setSession(authResult);\n          resolve();\n        } else if (err) {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  setSession(authResult) {\n    // let expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime())\n    let date = new Date();\n    let expiresAt = date.setDate(date.getDate() + 1);\n    Cookies.set('user', authResult.idTokenPayload, {\n      expires: 1\n    });\n    Cookies.set('jwt', authResult.idToken, {\n      expires: 1\n    });\n    Cookies.set('expiresAt', expiresAt, {\n      expires: 1\n    });\n    Cookies.set('sub', authResult.idTokenPayload.sub, {\n      expires: 1\n    });\n    this.setFaves(\"set Session\");\n  }\n\n  setFaves() {\n    getUserFavourites(Cookies.get('sub')).then(data => Cookies.set('favourites', data, {\n      expires: 1\n    }));\n  }\n\n  logout() {\n    Cookies.remove('user');\n    Cookies.remove('jwt');\n    Cookies.remove('expiresAt');\n    Cookies.remove('sub');\n    Cookies.remove('returnURL');\n    this.auth0.logout({\n      returnTo: CLIENT_URL,\n      clientID: '6w0luoKEKUH4QLOImluA81kNf3jLmWbr'\n    });\n  }\n\n  login() {\n    Cookies.set('returnURL', '/');\n    this.auth0.authorize();\n  }\n\n  loginAddActivity() {\n    Cookies.set('returnURL', '/create');\n    this.auth0.authorize();\n  }\n\n  isAuthenticated() {\n    const expiresAt = Cookies.get('expiresAt');\n    return new Date().getTime() < expiresAt;\n  }\n\n}\n\nconst auth0Client = new Auth0();\nexport default auth0Client;","map":{"version":3,"sources":["/Users/Dev/Dev/discoverdoo-app/services/auth0.js"],"names":["auth0","Cookies","getUserFavourites","CLIENT_URL","process","env","Auth0","constructor","WebAuth","domain","clientID","redirectUri","responseType","scope","login","bind","loginAddActivity","logout","handleAuthentication","isAuthenticated","Promise","resolve","reject","parseHash","err","authResult","accessToken","idToken","setSession","date","Date","expiresAt","setDate","getDate","set","idTokenPayload","expires","sub","setFaves","get","then","data","remove","returnTo","authorize","getTime","auth0Client"],"mappings":"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","sourcesContent":["import auth0 from 'auth0-js'\nimport Cookies from 'js-cookie'\nimport { getUserFavourites } from '../actions'\n\nconst CLIENT_URL = process.env.CLIENT_URL;\n\nclass Auth0 {\n\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: 'jakepeg.eu.auth0.com',\n      clientID: '6w0luoKEKUH4QLOImluA81kNf3jLmWbr',\n      redirectUri: `${CLIENT_URL}/callback`,\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n\n    this.login = this.login.bind(this);\n    this.loginAddActivity = this.loginAddActivity.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  handleAuthentication() {\n    return new Promise((resolve, reject) => {\n      this.auth0.parseHash((err, authResult) => {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          this.setSession(authResult);\n          resolve();\n        } else if (err) {\n          reject(err);\n        }\n      });\n    })\n  }\n\n  setSession(authResult) {\n    // let expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime())\n    let date = new Date();\n    let expiresAt = date.setDate(date.getDate() + 1);\n    Cookies.set('user', authResult.idTokenPayload, { expires: 1 })\n    Cookies.set('jwt', authResult.idToken, { expires: 1 })\n    Cookies.set('expiresAt', expiresAt, { expires: 1 })\n    Cookies.set('sub', authResult.idTokenPayload.sub, { expires: 1 })\n    this.setFaves(\"set Session\")\n  }\n\n  setFaves() {\n    getUserFavourites(Cookies.get('sub')).then(data => Cookies.set('favourites', data, { expires: 1 }))\n   }\n\n  logout() {\n    Cookies.remove('user')\n    Cookies.remove('jwt')\n    Cookies.remove('expiresAt')\n    Cookies.remove('sub')\n    Cookies.remove('returnURL')\n\n    this.auth0.logout({\n      returnTo: CLIENT_URL,\n      clientID: '6w0luoKEKUH4QLOImluA81kNf3jLmWbr'\n    })\n  }\n\n  login() {\n    Cookies.set('returnURL', '/')\n    this.auth0.authorize()\n  }\n\n  loginAddActivity() {\n    Cookies.set('returnURL', '/create')\n    this.auth0.authorize()\n  }\n\n  isAuthenticated() {\n    const expiresAt = Cookies.get('expiresAt')\n    return new Date().getTime() < expiresAt;\n    }\n}\n\nconst auth0Client = new Auth0();\n\nexport default auth0Client"]},"metadata":{},"sourceType":"module"}